Terminals unused in grammar

   TOKEN_VAL_INTEGER
   TOKEN_VAL_FLOAT
   TOKEN_VAL_IDENTIFIER
   TOKEN_VAL_TRUE
   TOKEN_VAL_FALSE
   TOKEN_TYP_INT
   TOKEN_TYP_BOOL
   TOKEN_TYP_FLOAT
   TOKEN_TYP_BVEC2
   TOKEN_TYP_BVEC3
   TOKEN_TYP_BVEC4
   TOKEN_TYP_IVEC2
   TOKEN_TYP_IVEC3
   TOKEN_TYP_IVEC4
   TOKEN_TYP_VEC2
   TOKEN_TYP_VEC3
   TOKEN_TYP_VEC4
   TOKEN_QUA_CONST
   TOKEN_CON_IF
   TOKEN_CON_ELSE
   TOKEN_CON_WHILE
   TOKEN_ASSIGN
   TOKEN_NOT
   TOKEN_GREATER
   TOKEN_LESS
   TOKEN_EQUAL
   TOKEN_NOT_EQUAL
   TOKEN_GREATER_EQUAL
   TOKEN_LESS_EQUAL
   TOKEN_PLUS
   TOKEN_MINUS
   TOKEN_MULTIPLY
   TOKEN_DIVIDE
   TOKEN_BIT_AND
   TOKEN_BIT_OR
   TOKEN_BIT_XOR
   TOKEN_AND
   TOKEN_OR
   TOKEN_GRA_BRACKET_OPEN
   TOKEN_GRA_BRACKET_CLOSE
   TOKEN_GRA_CURLY_OPEN
   TOKEN_GRA_CURLY_CLOSE
   TOKEN_GRA_SQUARE_OPEN
   TOKEN_GRA_SQUARE_CLOSE
   TOKEN_GRA_COMMAR
   TOKEN_GRA_COLON


Rules useless in parser due to conflicts

    4 token: %empty
    5      | %empty


State 2 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: tokens

    2 tokens: tokens token
    3       | %empty

    4 token: %empty
    5      | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_VAL_INTEGER (258)
TOKEN_VAL_FLOAT (259)
TOKEN_VAL_IDENTIFIER (260)
TOKEN_VAL_TRUE (261)
TOKEN_VAL_FALSE (262)
TOKEN_TYP_INT (263)
TOKEN_TYP_BOOL (264)
TOKEN_TYP_FLOAT (265)
TOKEN_TYP_BVEC2 (266)
TOKEN_TYP_BVEC3 (267)
TOKEN_TYP_BVEC4 (268)
TOKEN_TYP_IVEC2 (269)
TOKEN_TYP_IVEC3 (270)
TOKEN_TYP_IVEC4 (271)
TOKEN_TYP_VEC2 (272)
TOKEN_TYP_VEC3 (273)
TOKEN_TYP_VEC4 (274)
TOKEN_QUA_CONST (275)
TOKEN_CON_IF (276)
TOKEN_CON_ELSE (277)
TOKEN_CON_WHILE (278)
TOKEN_ASSIGN (279)
TOKEN_NOT (280)
TOKEN_GREATER (281)
TOKEN_LESS (282)
TOKEN_EQUAL (283)
TOKEN_NOT_EQUAL (284)
TOKEN_GREATER_EQUAL (285)
TOKEN_LESS_EQUAL (286)
TOKEN_PLUS (287)
TOKEN_MINUS (288)
TOKEN_MULTIPLY (289)
TOKEN_DIVIDE (290)
TOKEN_BIT_AND (291)
TOKEN_BIT_OR (292)
TOKEN_BIT_XOR (293)
TOKEN_AND (294)
TOKEN_OR (295)
TOKEN_GRA_BRACKET_OPEN (296)
TOKEN_GRA_BRACKET_CLOSE (297)
TOKEN_GRA_CURLY_OPEN (298)
TOKEN_GRA_CURLY_CLOSE (299)
TOKEN_GRA_SQUARE_OPEN (300)
TOKEN_GRA_SQUARE_CLOSE (301)
TOKEN_GRA_COMMAR (302)
TOKEN_GRA_COLON (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
tokens (51)
    on left: 2 3, on right: 1 2
token (52)
    on left: 4 5, on right: 2


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (tokens)

    program  go to state 1
    tokens   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: tokens .
    2 tokens: tokens . token

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 4 (token)]
    $end      [reduce using rule 5 (token)]
    $default  reduce using rule 1 (program)

    token  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 tokens: tokens token .

    $default  reduce using rule 2 (tokens)
