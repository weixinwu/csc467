Terminals unused in grammar

   TOKEN_QUA_CONST


State 93 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    2 instructions: instructions instruction
    3             | %empty

    4 instruction: declaration TOKEN_GRA_COLON
    5            | assignment TOKEN_GRA_COLON
    6            | statement
    7            | loop
    8            | TOKEN_GRA_COLON

    9 value: TOKEN_VAL_FLOAT
   10      | TOKEN_VAL_TRUE
   11      | TOKEN_VAL_FALSE
   12      | TOKEN_VAL_INTEGER
   13      | TOKEN_VAL_IDENTIFIER index

   14 type: TOKEN_TYP_INT
   15     | TOKEN_TYP_BOOL
   16     | TOKEN_TYP_FLOAT
   17     | TOKEN_TYP_BVEC2
   18     | TOKEN_TYP_BVEC3
   19     | TOKEN_TYP_BVEC4
   20     | TOKEN_TYP_IVEC2
   21     | TOKEN_TYP_IVEC3
   22     | TOKEN_TYP_IVEC4
   23     | TOKEN_TYP_VEC2
   24     | TOKEN_TYP_VEC3
   25     | TOKEN_TYP_VEC4

   26 index: TOKEN_GRA_SQUARE_OPEN TOKEN_VAL_INTEGER TOKEN_GRA_SQUARE_CLOSE index
   27      | %empty

   28 declaration: type TOKEN_VAL_IDENTIFIER
   29            | type assignment

   30 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN expression
   31           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

   34 expression: value
   35           | expression TOKEN_PLUS expression
   36           | expression TOKEN_MINUS expression
   37           | expression TOKEN_MULTIPLY expression
   38           | expression TOKEN_DIVIDE expression
   39           | TOKEN_MINUS expression
   40           | expression TOKEN_EXPONENT expression
   41           | expression comparison expression
   42           | expression TOKEN_AND expression
   43           | expression TOKEN_OR expression
   44           | TOKEN_NOT expression
   45           | TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE

   46 statement_if: TOKEN_CON_IF TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

   47 statement_elseif: statement_if TOKEN_CON_ELSE statement_if
   48                 | statement_elseif TOKEN_CON_ELSE statement_if

   49 statement: statement_if
   50          | statement_elseif
   51          | statement_elseif TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE
   52          | statement_if TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

   53 loop: TOKEN_CON_WHILE TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

   54 comparison: TOKEN_EQUAL
   55           | TOKEN_NOT_EQUAL
   56           | TOKEN_GREATER_EQUAL
   57           | TOKEN_LESS_EQUAL
   58           | TOKEN_GREATER
   59           | TOKEN_LESS


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_VAL_INTEGER (258) 12 26
TOKEN_VAL_FLOAT (259) 9
TOKEN_VAL_IDENTIFIER (260) 13 28 30 31 32 33
TOKEN_VAL_TRUE (261) 10
TOKEN_VAL_FALSE (262) 11
TOKEN_TYP_INT (263) 14
TOKEN_TYP_BOOL (264) 15
TOKEN_TYP_FLOAT (265) 16
TOKEN_TYP_BVEC2 (266) 17
TOKEN_TYP_BVEC3 (267) 18
TOKEN_TYP_BVEC4 (268) 19
TOKEN_TYP_IVEC2 (269) 20
TOKEN_TYP_IVEC3 (270) 21
TOKEN_TYP_IVEC4 (271) 22
TOKEN_TYP_VEC2 (272) 23
TOKEN_TYP_VEC3 (273) 24
TOKEN_TYP_VEC4 (274) 25
TOKEN_QUA_CONST (275)
TOKEN_CON_IF (276) 46
TOKEN_CON_ELSE (277) 47 48 51 52
TOKEN_CON_WHILE (278) 53
TOKEN_ASSIGN (279) 30 31 32 33
TOKEN_NOT (280) 44
TOKEN_GREATER (281) 58
TOKEN_LESS (282) 59
TOKEN_EXPONENT (283) 40
TOKEN_EQUAL (284) 54
TOKEN_NOT_EQUAL (285) 55
TOKEN_GREATER_EQUAL (286) 56
TOKEN_LESS_EQUAL (287) 57
TOKEN_PLUS (288) 35
TOKEN_MINUS (289) 36 39
TOKEN_MULTIPLY (290) 37
TOKEN_DIVIDE (291) 38
TOKEN_AND (292) 42
TOKEN_OR (293) 43
TOKEN_GRA_BRACKET_OPEN (294) 45 46 53
TOKEN_GRA_BRACKET_CLOSE (295) 45 46 53
TOKEN_GRA_CURLY_OPEN (296) 1 31 32 33 46 51 52 53
TOKEN_GRA_CURLY_CLOSE (297) 1 31 32 33 46 51 52 53
TOKEN_GRA_SQUARE_OPEN (298) 26
TOKEN_GRA_SQUARE_CLOSE (299) 26
TOKEN_GRA_COMMAR (300) 31 32 33
TOKEN_GRA_COLON (301) 4 5 8
NEG (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
instructions (50)
    on left: 2 3, on right: 1 2 46 51 52 53
instruction (51)
    on left: 4 5 6 7 8, on right: 2
value (52)
    on left: 9 10 11 12 13, on right: 34
type (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25, on right: 28 29
index (54)
    on left: 26 27, on right: 13 26 30 31 32 33
declaration (55)
    on left: 28 29, on right: 4
assignment (56)
    on left: 30 31 32 33, on right: 5 29
expression (57)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45, on right: 30 31 32
    33 35 36 37 38 39 40 41 42 43 44 45 46 53
statement_if (58)
    on left: 46, on right: 47 48 49 52
statement_elseif (59)
    on left: 47 48, on right: 48 50 51
statement (60)
    on left: 49 50 51 52, on right: 6
loop (61)
    on left: 53, on right: 7
comparison (62)
    on left: 54 55 56 57 58 59, on right: 41


State 0

    0 $accept: . program $end

    TOKEN_GRA_CURLY_OPEN  shift, and go to state 1

    program  go to state 2


State 1

    1 program: TOKEN_GRA_CURLY_OPEN . instructions TOKEN_GRA_CURLY_CLOSE

    $default  reduce using rule 3 (instructions)

    instructions  go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: TOKEN_GRA_CURLY_OPEN instructions . TOKEN_GRA_CURLY_CLOSE
    2 instructions: instructions . instruction

    TOKEN_VAL_IDENTIFIER   shift, and go to state 5
    TOKEN_TYP_INT          shift, and go to state 6
    TOKEN_TYP_BOOL         shift, and go to state 7
    TOKEN_TYP_FLOAT        shift, and go to state 8
    TOKEN_TYP_BVEC2        shift, and go to state 9
    TOKEN_TYP_BVEC3        shift, and go to state 10
    TOKEN_TYP_BVEC4        shift, and go to state 11
    TOKEN_TYP_IVEC2        shift, and go to state 12
    TOKEN_TYP_IVEC3        shift, and go to state 13
    TOKEN_TYP_IVEC4        shift, and go to state 14
    TOKEN_TYP_VEC2         shift, and go to state 15
    TOKEN_TYP_VEC3         shift, and go to state 16
    TOKEN_TYP_VEC4         shift, and go to state 17
    TOKEN_CON_IF           shift, and go to state 18
    TOKEN_CON_WHILE        shift, and go to state 19
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 20
    TOKEN_GRA_COLON        shift, and go to state 21

    instruction       go to state 22
    type              go to state 23
    declaration       go to state 24
    assignment        go to state 25
    statement_if      go to state 26
    statement_elseif  go to state 27
    statement         go to state 28
    loop              go to state 29


State 4

    0 $accept: program $end .

    $default  accept


State 5

   30 assignment: TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN expression
   31           | TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_GRA_SQUARE_OPEN  shift, and go to state 30

    $default  reduce using rule 27 (index)

    index  go to state 31


State 6

   14 type: TOKEN_TYP_INT .

    $default  reduce using rule 14 (type)


State 7

   15 type: TOKEN_TYP_BOOL .

    $default  reduce using rule 15 (type)


State 8

   16 type: TOKEN_TYP_FLOAT .

    $default  reduce using rule 16 (type)


State 9

   17 type: TOKEN_TYP_BVEC2 .

    $default  reduce using rule 17 (type)


State 10

   18 type: TOKEN_TYP_BVEC3 .

    $default  reduce using rule 18 (type)


State 11

   19 type: TOKEN_TYP_BVEC4 .

    $default  reduce using rule 19 (type)


State 12

   20 type: TOKEN_TYP_IVEC2 .

    $default  reduce using rule 20 (type)


State 13

   21 type: TOKEN_TYP_IVEC3 .

    $default  reduce using rule 21 (type)


State 14

   22 type: TOKEN_TYP_IVEC4 .

    $default  reduce using rule 22 (type)


State 15

   23 type: TOKEN_TYP_VEC2 .

    $default  reduce using rule 23 (type)


State 16

   24 type: TOKEN_TYP_VEC3 .

    $default  reduce using rule 24 (type)


State 17

   25 type: TOKEN_TYP_VEC4 .

    $default  reduce using rule 25 (type)


State 18

   46 statement_if: TOKEN_CON_IF . TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 32


State 19

   53 loop: TOKEN_CON_WHILE . TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 33


State 20

    1 program: TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 1 (program)


State 21

    8 instruction: TOKEN_GRA_COLON .

    $default  reduce using rule 8 (instruction)


State 22

    2 instructions: instructions instruction .

    $default  reduce using rule 2 (instructions)


State 23

   28 declaration: type . TOKEN_VAL_IDENTIFIER
   29            | type . assignment

    TOKEN_VAL_IDENTIFIER  shift, and go to state 34

    assignment  go to state 35


State 24

    4 instruction: declaration . TOKEN_GRA_COLON

    TOKEN_GRA_COLON  shift, and go to state 36


State 25

    5 instruction: assignment . TOKEN_GRA_COLON

    TOKEN_GRA_COLON  shift, and go to state 37


State 26

   47 statement_elseif: statement_if . TOKEN_CON_ELSE statement_if
   49 statement: statement_if .
   52          | statement_if . TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_CON_ELSE  shift, and go to state 38

    $default  reduce using rule 49 (statement)


State 27

   48 statement_elseif: statement_elseif . TOKEN_CON_ELSE statement_if
   50 statement: statement_elseif .
   51          | statement_elseif . TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_CON_ELSE  shift, and go to state 39

    $default  reduce using rule 50 (statement)


State 28

    6 instruction: statement .

    $default  reduce using rule 6 (instruction)


State 29

    7 instruction: loop .

    $default  reduce using rule 7 (instruction)


State 30

   26 index: TOKEN_GRA_SQUARE_OPEN . TOKEN_VAL_INTEGER TOKEN_GRA_SQUARE_CLOSE index

    TOKEN_VAL_INTEGER  shift, and go to state 40


State 31

   30 assignment: TOKEN_VAL_IDENTIFIER index . TOKEN_ASSIGN expression
   31           | TOKEN_VAL_IDENTIFIER index . TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER index . TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index . TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_ASSIGN  shift, and go to state 41


State 32

   46 statement_if: TOKEN_CON_IF TOKEN_GRA_BRACKET_OPEN . expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 51


State 33

   53 loop: TOKEN_CON_WHILE TOKEN_GRA_BRACKET_OPEN . expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 52


State 34

   28 declaration: type TOKEN_VAL_IDENTIFIER .
   30 assignment: TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN expression
   31           | TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER . index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_GRA_SQUARE_OPEN  shift, and go to state 30

    TOKEN_GRA_COLON  reduce using rule 28 (declaration)
    $default         reduce using rule 27 (index)

    index  go to state 31


State 35

   29 declaration: type assignment .

    $default  reduce using rule 29 (declaration)


State 36

    4 instruction: declaration TOKEN_GRA_COLON .

    $default  reduce using rule 4 (instruction)


State 37

    5 instruction: assignment TOKEN_GRA_COLON .

    $default  reduce using rule 5 (instruction)


State 38

   47 statement_elseif: statement_if TOKEN_CON_ELSE . statement_if
   52 statement: statement_if TOKEN_CON_ELSE . TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_CON_IF          shift, and go to state 18
    TOKEN_GRA_CURLY_OPEN  shift, and go to state 53

    statement_if  go to state 54


State 39

   48 statement_elseif: statement_elseif TOKEN_CON_ELSE . statement_if
   51 statement: statement_elseif TOKEN_CON_ELSE . TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_CON_IF          shift, and go to state 18
    TOKEN_GRA_CURLY_OPEN  shift, and go to state 55

    statement_if  go to state 56


State 40

   26 index: TOKEN_GRA_SQUARE_OPEN TOKEN_VAL_INTEGER . TOKEN_GRA_SQUARE_CLOSE index

    TOKEN_GRA_SQUARE_CLOSE  shift, and go to state 57


State 41

   30 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN . expression
   31           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN . TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN . TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN . TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49
    TOKEN_GRA_CURLY_OPEN    shift, and go to state 58

    value       go to state 50
    expression  go to state 59


State 42

   12 value: TOKEN_VAL_INTEGER .

    $default  reduce using rule 12 (value)


State 43

    9 value: TOKEN_VAL_FLOAT .

    $default  reduce using rule 9 (value)


State 44

   13 value: TOKEN_VAL_IDENTIFIER . index

    TOKEN_GRA_SQUARE_OPEN  shift, and go to state 30

    $default  reduce using rule 27 (index)

    index  go to state 60


State 45

   10 value: TOKEN_VAL_TRUE .

    $default  reduce using rule 10 (value)


State 46

   11 value: TOKEN_VAL_FALSE .

    $default  reduce using rule 11 (value)


State 47

   44 expression: TOKEN_NOT . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 61


State 48

   39 expression: TOKEN_MINUS . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 62


State 49

   45 expression: TOKEN_GRA_BRACKET_OPEN . expression TOKEN_GRA_BRACKET_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 63


State 50

   34 expression: value .

    $default  reduce using rule 34 (expression)


State 51

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression
   46 statement_if: TOKEN_CON_IF TOKEN_GRA_BRACKET_OPEN expression . TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_GREATER            shift, and go to state 64
    TOKEN_LESS               shift, and go to state 65
    TOKEN_EXPONENT           shift, and go to state 66
    TOKEN_EQUAL              shift, and go to state 67
    TOKEN_NOT_EQUAL          shift, and go to state 68
    TOKEN_GREATER_EQUAL      shift, and go to state 69
    TOKEN_LESS_EQUAL         shift, and go to state 70
    TOKEN_PLUS               shift, and go to state 71
    TOKEN_MINUS              shift, and go to state 72
    TOKEN_MULTIPLY           shift, and go to state 73
    TOKEN_DIVIDE             shift, and go to state 74
    TOKEN_AND                shift, and go to state 75
    TOKEN_OR                 shift, and go to state 76
    TOKEN_GRA_BRACKET_CLOSE  shift, and go to state 77

    comparison  go to state 78


State 52

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression
   53 loop: TOKEN_CON_WHILE TOKEN_GRA_BRACKET_OPEN expression . TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_GREATER            shift, and go to state 64
    TOKEN_LESS               shift, and go to state 65
    TOKEN_EXPONENT           shift, and go to state 66
    TOKEN_EQUAL              shift, and go to state 67
    TOKEN_NOT_EQUAL          shift, and go to state 68
    TOKEN_GREATER_EQUAL      shift, and go to state 69
    TOKEN_LESS_EQUAL         shift, and go to state 70
    TOKEN_PLUS               shift, and go to state 71
    TOKEN_MINUS              shift, and go to state 72
    TOKEN_MULTIPLY           shift, and go to state 73
    TOKEN_DIVIDE             shift, and go to state 74
    TOKEN_AND                shift, and go to state 75
    TOKEN_OR                 shift, and go to state 76
    TOKEN_GRA_BRACKET_CLOSE  shift, and go to state 79

    comparison  go to state 78


State 53

   52 statement: statement_if TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN . instructions TOKEN_GRA_CURLY_CLOSE

    $default  reduce using rule 3 (instructions)

    instructions  go to state 80


State 54

   47 statement_elseif: statement_if TOKEN_CON_ELSE statement_if .

    $default  reduce using rule 47 (statement_elseif)


State 55

   51 statement: statement_elseif TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN . instructions TOKEN_GRA_CURLY_CLOSE

    $default  reduce using rule 3 (instructions)

    instructions  go to state 81


State 56

   48 statement_elseif: statement_elseif TOKEN_CON_ELSE statement_if .

    $default  reduce using rule 48 (statement_elseif)


State 57

   26 index: TOKEN_GRA_SQUARE_OPEN TOKEN_VAL_INTEGER TOKEN_GRA_SQUARE_CLOSE . index

    TOKEN_GRA_SQUARE_OPEN  shift, and go to state 30

    $default  reduce using rule 27 (index)

    index  go to state 82


State 58

   31 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN . expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN . expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN . expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 83


State 59

   30 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN expression .
   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_GREATER        shift, and go to state 64
    TOKEN_LESS           shift, and go to state 65
    TOKEN_EXPONENT       shift, and go to state 66
    TOKEN_EQUAL          shift, and go to state 67
    TOKEN_NOT_EQUAL      shift, and go to state 68
    TOKEN_GREATER_EQUAL  shift, and go to state 69
    TOKEN_LESS_EQUAL     shift, and go to state 70
    TOKEN_PLUS           shift, and go to state 71
    TOKEN_MINUS          shift, and go to state 72
    TOKEN_MULTIPLY       shift, and go to state 73
    TOKEN_DIVIDE         shift, and go to state 74
    TOKEN_AND            shift, and go to state 75
    TOKEN_OR             shift, and go to state 76

    $default  reduce using rule 30 (assignment)

    comparison  go to state 78


State 60

   13 value: TOKEN_VAL_IDENTIFIER index .

    $default  reduce using rule 13 (value)


State 61

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression
   44           | TOKEN_NOT expression .

    $default  reduce using rule 44 (expression)

    comparison  go to state 78


State 62

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   39           | TOKEN_MINUS expression .
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    $default  reduce using rule 39 (expression)

    comparison  go to state 78


State 63

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression
   45           | TOKEN_GRA_BRACKET_OPEN expression . TOKEN_GRA_BRACKET_CLOSE

    TOKEN_GREATER            shift, and go to state 64
    TOKEN_LESS               shift, and go to state 65
    TOKEN_EXPONENT           shift, and go to state 66
    TOKEN_EQUAL              shift, and go to state 67
    TOKEN_NOT_EQUAL          shift, and go to state 68
    TOKEN_GREATER_EQUAL      shift, and go to state 69
    TOKEN_LESS_EQUAL         shift, and go to state 70
    TOKEN_PLUS               shift, and go to state 71
    TOKEN_MINUS              shift, and go to state 72
    TOKEN_MULTIPLY           shift, and go to state 73
    TOKEN_DIVIDE             shift, and go to state 74
    TOKEN_AND                shift, and go to state 75
    TOKEN_OR                 shift, and go to state 76
    TOKEN_GRA_BRACKET_CLOSE  shift, and go to state 84

    comparison  go to state 78


State 64

   58 comparison: TOKEN_GREATER .

    $default  reduce using rule 58 (comparison)


State 65

   59 comparison: TOKEN_LESS .

    $default  reduce using rule 59 (comparison)


State 66

   40 expression: expression TOKEN_EXPONENT . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 85


State 67

   54 comparison: TOKEN_EQUAL .

    $default  reduce using rule 54 (comparison)


State 68

   55 comparison: TOKEN_NOT_EQUAL .

    $default  reduce using rule 55 (comparison)


State 69

   56 comparison: TOKEN_GREATER_EQUAL .

    $default  reduce using rule 56 (comparison)


State 70

   57 comparison: TOKEN_LESS_EQUAL .

    $default  reduce using rule 57 (comparison)


State 71

   35 expression: expression TOKEN_PLUS . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 86


State 72

   36 expression: expression TOKEN_MINUS . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 87


State 73

   37 expression: expression TOKEN_MULTIPLY . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 88


State 74

   38 expression: expression TOKEN_DIVIDE . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 89


State 75

   42 expression: expression TOKEN_AND . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 90


State 76

   43 expression: expression TOKEN_OR . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 91


State 77

   46 statement_if: TOKEN_CON_IF TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE . TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_GRA_CURLY_OPEN  shift, and go to state 92


State 78

   41 expression: expression comparison . expression

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 93


State 79

   53 loop: TOKEN_CON_WHILE TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE . TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE

    TOKEN_GRA_CURLY_OPEN  shift, and go to state 94


State 80

    2 instructions: instructions . instruction
   52 statement: statement_if TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions . TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_IDENTIFIER   shift, and go to state 5
    TOKEN_TYP_INT          shift, and go to state 6
    TOKEN_TYP_BOOL         shift, and go to state 7
    TOKEN_TYP_FLOAT        shift, and go to state 8
    TOKEN_TYP_BVEC2        shift, and go to state 9
    TOKEN_TYP_BVEC3        shift, and go to state 10
    TOKEN_TYP_BVEC4        shift, and go to state 11
    TOKEN_TYP_IVEC2        shift, and go to state 12
    TOKEN_TYP_IVEC3        shift, and go to state 13
    TOKEN_TYP_IVEC4        shift, and go to state 14
    TOKEN_TYP_VEC2         shift, and go to state 15
    TOKEN_TYP_VEC3         shift, and go to state 16
    TOKEN_TYP_VEC4         shift, and go to state 17
    TOKEN_CON_IF           shift, and go to state 18
    TOKEN_CON_WHILE        shift, and go to state 19
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 95
    TOKEN_GRA_COLON        shift, and go to state 21

    instruction       go to state 22
    type              go to state 23
    declaration       go to state 24
    assignment        go to state 25
    statement_if      go to state 26
    statement_elseif  go to state 27
    statement         go to state 28
    loop              go to state 29


State 81

    2 instructions: instructions . instruction
   51 statement: statement_elseif TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions . TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_IDENTIFIER   shift, and go to state 5
    TOKEN_TYP_INT          shift, and go to state 6
    TOKEN_TYP_BOOL         shift, and go to state 7
    TOKEN_TYP_FLOAT        shift, and go to state 8
    TOKEN_TYP_BVEC2        shift, and go to state 9
    TOKEN_TYP_BVEC3        shift, and go to state 10
    TOKEN_TYP_BVEC4        shift, and go to state 11
    TOKEN_TYP_IVEC2        shift, and go to state 12
    TOKEN_TYP_IVEC3        shift, and go to state 13
    TOKEN_TYP_IVEC4        shift, and go to state 14
    TOKEN_TYP_VEC2         shift, and go to state 15
    TOKEN_TYP_VEC3         shift, and go to state 16
    TOKEN_TYP_VEC4         shift, and go to state 17
    TOKEN_CON_IF           shift, and go to state 18
    TOKEN_CON_WHILE        shift, and go to state 19
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 96
    TOKEN_GRA_COLON        shift, and go to state 21

    instruction       go to state 22
    type              go to state 23
    declaration       go to state 24
    assignment        go to state 25
    statement_if      go to state 26
    statement_elseif  go to state 27
    statement         go to state 28
    loop              go to state 29


State 82

   26 index: TOKEN_GRA_SQUARE_OPEN TOKEN_VAL_INTEGER TOKEN_GRA_SQUARE_CLOSE index .

    $default  reduce using rule 26 (index)


State 83

   31 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression . TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression . TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression . TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_GREATER        shift, and go to state 64
    TOKEN_LESS           shift, and go to state 65
    TOKEN_EXPONENT       shift, and go to state 66
    TOKEN_EQUAL          shift, and go to state 67
    TOKEN_NOT_EQUAL      shift, and go to state 68
    TOKEN_GREATER_EQUAL  shift, and go to state 69
    TOKEN_LESS_EQUAL     shift, and go to state 70
    TOKEN_PLUS           shift, and go to state 71
    TOKEN_MINUS          shift, and go to state 72
    TOKEN_MULTIPLY       shift, and go to state 73
    TOKEN_DIVIDE         shift, and go to state 74
    TOKEN_AND            shift, and go to state 75
    TOKEN_OR             shift, and go to state 76
    TOKEN_GRA_COMMAR     shift, and go to state 97

    comparison  go to state 78


State 84

   45 expression: TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE .

    $default  reduce using rule 45 (expression)


State 85

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   40           | expression TOKEN_EXPONENT expression .
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_EXPONENT  shift, and go to state 66

    $default  reduce using rule 40 (expression)

    comparison  go to state 78


State 86

   35 expression: expression . TOKEN_PLUS expression
   35           | expression TOKEN_PLUS expression .
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_EXPONENT  shift, and go to state 66
    TOKEN_MULTIPLY  shift, and go to state 73
    TOKEN_DIVIDE    shift, and go to state 74

    $default  reduce using rule 35 (expression)

    comparison  go to state 78


State 87

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   36           | expression TOKEN_MINUS expression .
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_EXPONENT  shift, and go to state 66
    TOKEN_MULTIPLY  shift, and go to state 73
    TOKEN_DIVIDE    shift, and go to state 74

    $default  reduce using rule 36 (expression)

    comparison  go to state 78


State 88

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   37           | expression TOKEN_MULTIPLY expression .
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_EXPONENT  shift, and go to state 66

    $default  reduce using rule 37 (expression)

    comparison  go to state 78


State 89

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   38           | expression TOKEN_DIVIDE expression .
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_EXPONENT  shift, and go to state 66

    $default  reduce using rule 38 (expression)

    comparison  go to state 78


State 90

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   42           | expression TOKEN_AND expression .
   43           | expression . TOKEN_OR expression

    TOKEN_GREATER        shift, and go to state 64
    TOKEN_LESS           shift, and go to state 65
    TOKEN_EXPONENT       shift, and go to state 66
    TOKEN_EQUAL          shift, and go to state 67
    TOKEN_NOT_EQUAL      shift, and go to state 68
    TOKEN_GREATER_EQUAL  shift, and go to state 69
    TOKEN_LESS_EQUAL     shift, and go to state 70
    TOKEN_PLUS           shift, and go to state 71
    TOKEN_MINUS          shift, and go to state 72
    TOKEN_MULTIPLY       shift, and go to state 73
    TOKEN_DIVIDE         shift, and go to state 74

    $default  reduce using rule 42 (expression)

    comparison  go to state 78


State 91

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression
   43           | expression TOKEN_OR expression .

    TOKEN_GREATER        shift, and go to state 64
    TOKEN_LESS           shift, and go to state 65
    TOKEN_EXPONENT       shift, and go to state 66
    TOKEN_EQUAL          shift, and go to state 67
    TOKEN_NOT_EQUAL      shift, and go to state 68
    TOKEN_GREATER_EQUAL  shift, and go to state 69
    TOKEN_LESS_EQUAL     shift, and go to state 70
    TOKEN_PLUS           shift, and go to state 71
    TOKEN_MINUS          shift, and go to state 72
    TOKEN_MULTIPLY       shift, and go to state 73
    TOKEN_DIVIDE         shift, and go to state 74
    TOKEN_AND            shift, and go to state 75

    $default  reduce using rule 43 (expression)

    comparison  go to state 78


State 92

   46 statement_if: TOKEN_CON_IF TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN . instructions TOKEN_GRA_CURLY_CLOSE

    $default  reduce using rule 3 (instructions)

    instructions  go to state 98


State 93

   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   41           | expression comparison expression .
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_GREATER        shift, and go to state 64
    TOKEN_LESS           shift, and go to state 65
    TOKEN_EXPONENT       shift, and go to state 66
    TOKEN_EQUAL          shift, and go to state 67
    TOKEN_NOT_EQUAL      shift, and go to state 68
    TOKEN_GREATER_EQUAL  shift, and go to state 69
    TOKEN_LESS_EQUAL     shift, and go to state 70
    TOKEN_PLUS           shift, and go to state 71
    TOKEN_MINUS          shift, and go to state 72
    TOKEN_MULTIPLY       shift, and go to state 73
    TOKEN_DIVIDE         shift, and go to state 74
    TOKEN_AND            shift, and go to state 75
    TOKEN_OR             shift, and go to state 76

    TOKEN_GREATER        [reduce using rule 41 (expression)]
    TOKEN_LESS           [reduce using rule 41 (expression)]
    TOKEN_EXPONENT       [reduce using rule 41 (expression)]
    TOKEN_EQUAL          [reduce using rule 41 (expression)]
    TOKEN_NOT_EQUAL      [reduce using rule 41 (expression)]
    TOKEN_GREATER_EQUAL  [reduce using rule 41 (expression)]
    TOKEN_LESS_EQUAL     [reduce using rule 41 (expression)]
    TOKEN_PLUS           [reduce using rule 41 (expression)]
    TOKEN_MINUS          [reduce using rule 41 (expression)]
    TOKEN_MULTIPLY       [reduce using rule 41 (expression)]
    TOKEN_DIVIDE         [reduce using rule 41 (expression)]
    TOKEN_AND            [reduce using rule 41 (expression)]
    TOKEN_OR             [reduce using rule 41 (expression)]
    $default             reduce using rule 41 (expression)

    comparison  go to state 78


State 94

   53 loop: TOKEN_CON_WHILE TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN . instructions TOKEN_GRA_CURLY_CLOSE

    $default  reduce using rule 3 (instructions)

    instructions  go to state 99


State 95

   52 statement: statement_if TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 52 (statement)


State 96

   51 statement: statement_elseif TOKEN_CON_ELSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 51 (statement)


State 97

   31 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR . expression TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR . expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR . expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 100


State 98

    2 instructions: instructions . instruction
   46 statement_if: TOKEN_CON_IF TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions . TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_IDENTIFIER   shift, and go to state 5
    TOKEN_TYP_INT          shift, and go to state 6
    TOKEN_TYP_BOOL         shift, and go to state 7
    TOKEN_TYP_FLOAT        shift, and go to state 8
    TOKEN_TYP_BVEC2        shift, and go to state 9
    TOKEN_TYP_BVEC3        shift, and go to state 10
    TOKEN_TYP_BVEC4        shift, and go to state 11
    TOKEN_TYP_IVEC2        shift, and go to state 12
    TOKEN_TYP_IVEC3        shift, and go to state 13
    TOKEN_TYP_IVEC4        shift, and go to state 14
    TOKEN_TYP_VEC2         shift, and go to state 15
    TOKEN_TYP_VEC3         shift, and go to state 16
    TOKEN_TYP_VEC4         shift, and go to state 17
    TOKEN_CON_IF           shift, and go to state 18
    TOKEN_CON_WHILE        shift, and go to state 19
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 101
    TOKEN_GRA_COLON        shift, and go to state 21

    instruction       go to state 22
    type              go to state 23
    declaration       go to state 24
    assignment        go to state 25
    statement_if      go to state 26
    statement_elseif  go to state 27
    statement         go to state 28
    loop              go to state 29


State 99

    2 instructions: instructions . instruction
   53 loop: TOKEN_CON_WHILE TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions . TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_IDENTIFIER   shift, and go to state 5
    TOKEN_TYP_INT          shift, and go to state 6
    TOKEN_TYP_BOOL         shift, and go to state 7
    TOKEN_TYP_FLOAT        shift, and go to state 8
    TOKEN_TYP_BVEC2        shift, and go to state 9
    TOKEN_TYP_BVEC3        shift, and go to state 10
    TOKEN_TYP_BVEC4        shift, and go to state 11
    TOKEN_TYP_IVEC2        shift, and go to state 12
    TOKEN_TYP_IVEC3        shift, and go to state 13
    TOKEN_TYP_IVEC4        shift, and go to state 14
    TOKEN_TYP_VEC2         shift, and go to state 15
    TOKEN_TYP_VEC3         shift, and go to state 16
    TOKEN_TYP_VEC4         shift, and go to state 17
    TOKEN_CON_IF           shift, and go to state 18
    TOKEN_CON_WHILE        shift, and go to state 19
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 102
    TOKEN_GRA_COLON        shift, and go to state 21

    instruction       go to state 22
    type              go to state 23
    declaration       go to state 24
    assignment        go to state 25
    statement_if      go to state 26
    statement_elseif  go to state 27
    statement         go to state 28
    loop              go to state 29


State 100

   31 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression . TOKEN_GRA_CURLY_CLOSE
   32           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression . TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression . TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_GREATER          shift, and go to state 64
    TOKEN_LESS             shift, and go to state 65
    TOKEN_EXPONENT         shift, and go to state 66
    TOKEN_EQUAL            shift, and go to state 67
    TOKEN_NOT_EQUAL        shift, and go to state 68
    TOKEN_GREATER_EQUAL    shift, and go to state 69
    TOKEN_LESS_EQUAL       shift, and go to state 70
    TOKEN_PLUS             shift, and go to state 71
    TOKEN_MINUS            shift, and go to state 72
    TOKEN_MULTIPLY         shift, and go to state 73
    TOKEN_DIVIDE           shift, and go to state 74
    TOKEN_AND              shift, and go to state 75
    TOKEN_OR               shift, and go to state 76
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 103
    TOKEN_GRA_COMMAR       shift, and go to state 104

    comparison  go to state 78


State 101

   46 statement_if: TOKEN_CON_IF TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 46 (statement_if)


State 102

   53 loop: TOKEN_CON_WHILE TOKEN_GRA_BRACKET_OPEN expression TOKEN_GRA_BRACKET_CLOSE TOKEN_GRA_CURLY_OPEN instructions TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 53 (loop)


State 103

   31 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 31 (assignment)


State 104

   32 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR . expression TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR . expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 105


State 105

   32 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression . TOKEN_GRA_CURLY_CLOSE
   33           | TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression . TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE
   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_GREATER          shift, and go to state 64
    TOKEN_LESS             shift, and go to state 65
    TOKEN_EXPONENT         shift, and go to state 66
    TOKEN_EQUAL            shift, and go to state 67
    TOKEN_NOT_EQUAL        shift, and go to state 68
    TOKEN_GREATER_EQUAL    shift, and go to state 69
    TOKEN_LESS_EQUAL       shift, and go to state 70
    TOKEN_PLUS             shift, and go to state 71
    TOKEN_MINUS            shift, and go to state 72
    TOKEN_MULTIPLY         shift, and go to state 73
    TOKEN_DIVIDE           shift, and go to state 74
    TOKEN_AND              shift, and go to state 75
    TOKEN_OR               shift, and go to state 76
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 106
    TOKEN_GRA_COMMAR       shift, and go to state 107

    comparison  go to state 78


State 106

   32 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 32 (assignment)


State 107

   33 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR . expression TOKEN_GRA_CURLY_CLOSE

    TOKEN_VAL_INTEGER       shift, and go to state 42
    TOKEN_VAL_FLOAT         shift, and go to state 43
    TOKEN_VAL_IDENTIFIER    shift, and go to state 44
    TOKEN_VAL_TRUE          shift, and go to state 45
    TOKEN_VAL_FALSE         shift, and go to state 46
    TOKEN_NOT               shift, and go to state 47
    TOKEN_MINUS             shift, and go to state 48
    TOKEN_GRA_BRACKET_OPEN  shift, and go to state 49

    value       go to state 50
    expression  go to state 108


State 108

   33 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression . TOKEN_GRA_CURLY_CLOSE
   35 expression: expression . TOKEN_PLUS expression
   36           | expression . TOKEN_MINUS expression
   37           | expression . TOKEN_MULTIPLY expression
   38           | expression . TOKEN_DIVIDE expression
   40           | expression . TOKEN_EXPONENT expression
   41           | expression . comparison expression
   42           | expression . TOKEN_AND expression
   43           | expression . TOKEN_OR expression

    TOKEN_GREATER          shift, and go to state 64
    TOKEN_LESS             shift, and go to state 65
    TOKEN_EXPONENT         shift, and go to state 66
    TOKEN_EQUAL            shift, and go to state 67
    TOKEN_NOT_EQUAL        shift, and go to state 68
    TOKEN_GREATER_EQUAL    shift, and go to state 69
    TOKEN_LESS_EQUAL       shift, and go to state 70
    TOKEN_PLUS             shift, and go to state 71
    TOKEN_MINUS            shift, and go to state 72
    TOKEN_MULTIPLY         shift, and go to state 73
    TOKEN_DIVIDE           shift, and go to state 74
    TOKEN_AND              shift, and go to state 75
    TOKEN_OR               shift, and go to state 76
    TOKEN_GRA_CURLY_CLOSE  shift, and go to state 109

    comparison  go to state 78


State 109

   33 assignment: TOKEN_VAL_IDENTIFIER index TOKEN_ASSIGN TOKEN_GRA_CURLY_OPEN expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_COMMAR expression TOKEN_GRA_CURLY_CLOSE .

    $default  reduce using rule 33 (assignment)
